source ~/.zshfuncs

autoload -U colors
colors

# Auto completion
autoload -U compinit
compinit

# Edit current command line via Ctrl-E
autoload edit-command-line
zle -N edit-command-line
bindkey "^e" edit-command-line

# History
HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=$HISTSIZE
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
HISTIGNORE="(preview|mpv*) *"
zshaddhistory() { [[ $1 != ${~HISTIGNORE} ]]; }

# Key bindings
bindkey -e             # emacs key bindings
bindkey ' ' magic-space  # also do history expansion on space

bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line
bindkey "^[OH" beginning-of-line
bindkey "^[OF" end-of-line
bindkey "^[[1~" beginning-of-line
bindkey "^[[4~" end-of-line
bindkey "^[[7~" beginning-of-line
bindkey "^[[8~" end-of-line
bindkey "^[[5~" up-line-or-history
bindkey "^[[6~" down-line-or-history
bindkey "^?" backward-delete-char
bindkey "^[[3~" delete-char
bindkey '^[[A' history-beginning-search-backward # Up
bindkey '^[[B' history-beginning-search-forward # Down
bindkey '^L' push-line # Push command into buffer
bindkey "^R" history-incremental-pattern-search-backward
bindkey "^S" history-incremental-pattern-search-forward

# Other options
setopt AUTOCD
setopt AUTO_LIST
setopt AUTOPUSHD
setopt BRACE_CCL
setopt CORRECT
setopt EXTENDED_GLOB
setopt INTERACTIVE_COMMENTS
setopt NO_BEEP
setopt NO_FLOW_CONTROL
setopt NONOMATCH
setopt NUMERIC_GLOB_SORT
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_SILENT
setopt RM_STAR_WAIT
setopt MULTIBYTE
setopt NOCHECKJOBS
setopt NOHUP

# Not all zsh versions support the options below
for opt in COMBININGCHARS HASH_EXECUTABLESONLY; do
    [[ -n ${options[$opt]} ]] && setopt $opt
done

zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh_cache
zstyle ':completion:*' menu select
zstyle ':completion:*' verbose yes

export GOPATH=$HOME/.go/
export LC_ALL=en_US.UTF-8
export PROMPT_EOL_MARK=""
export PS1="%{$fg[red]%}%m%{$reset_color%} ☁ %{$fg[yellow]%}%~
%{$fg[magenta]%}%Bλ%b%{$reset_color%} "
export PYTHONDONTWRITEBYTECODE=1
export TERM=screen-256color-it
export VISUAL="vim"

alias ..="cd .."
alias ccat='pygmentize'
alias cd="cd"
alias checksum="b2sum -a blake2sp"
alias clear='printf "\ec"'
alias cls="clear"
alias curl="curl -C- -#"
alias d="cd"
alias dec="gpg -d"
alias dirsync="rsync -avPHSx --delete"
alias enc="gpg -a -e -r 0x381FA1D72D72DA97"
alias gdb="gdb --quiet"
alias grep="grep --color"
alias jmake="make -j$(nproc)"
alias l.='ls -d .* --color=auto'
alias ll="ls -al"
alias ls="ls -v --color"
alias lsrar="rar l"
alias lstar="tar -tvf"
alias lszip="unzip -l"
alias perms="stat -c '%A %a %n'"
alias preview="mpv -autofit-larger 480x720 -vo opengl-hq:dscale=mitchell -ao null -border=no"
alias rr="source ~/.zshrc"
alias rsync="rsync --archive --compress-level=3 --copy-links --partial --inplace --progress"
alias scp="rsync --archive --compress-level=3 --copy-links --partial --inplace --progress --rsh=ssh -r"
alias servethis="python -m http.server"
alias tf="less +F"
alias verify="gpg --verify"
alias wget='wget --content-disposition'

# Stop mapping CTRL-S/Q
stty stop undef
stty start undef

# Setup ls colors
if [ -e ~/.dir_colors ]; then eval `dircolors ~/.dir_colors`; fi

# Setup dirstack
DIRSTACKFILE=~/.zdirs
if [ -f $DIRSTACKFILE ]; then
    dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
fi

# less(1) options
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;016m\E[48;5;220m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline
